
#include <iostream>
#include <vector>

#include "List.hpp"

typedef unsigned uint;

using std::cout;
using std::cin;
using std::endl;
using std::vector;

vector<int>
execute (List<int>& J, uint k);

int
main (int agrs, char* argv[])
{
  uint N;
  uint k;
  cout << "N ==> ";
  cin >> N;
  cout << "k ==> ";
  cin >> k;
  List<int> J;
  for(uint i = 1; i <= N; ++i)
  {
    J.push_back(i);
  }
  
  vector<int> V = execute(J, k);
  cout << "Execution order: ";
  for(uint i = 0; i < V.size()-1; ++i){
    cout << V[i] << ", ";
  }
  cout << V[V.size()-1] << endl;
  cout << "Survivor       : " << J.front();
  cout <<   endl;
  return EXIT_SUCCESS;
}

vector<int>
execute (List<int>& J, uint k)
{
  vector<int> V;
  auto iter = J.end();	
  while( J.size() > 1) {
    for(uint i = 0; i < k; ++i){
      if(iter == --J.end()){
	iter++;
      }
      ++iter;
    }
    V.push_back(*iter);
    iter = J.erase(iter);
    --iter;
  }
  return V;
}
